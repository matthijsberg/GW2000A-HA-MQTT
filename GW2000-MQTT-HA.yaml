# configuration.yaml
# MUST BE IN THE mqtt: part of your config!

sensor:

  # Wittboy Ecowit GW2000a Weather Stations via MQTT
  # Based on firmware 3.2.5

  - name: "Weather Station Raw Data"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unique_id: "gw2000a_raw_data"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.dateutc | default('unknown') }}
    json_attributes_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data | to_json }}
    device:
      identifiers: "gw2000a_weather_station"
      name: "Wittboy GW2000A Weather Station"
      model: "GW2000A"
      manufacturer: "Wittboy"

  # Individual Sensors, grouped under the same device
  # Indoor Temperature
  - name: "Indoor Temperature"
    unique_id: "gw2000a_indoor_temperature"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ((ns.data.tempinf | default(0.0) | float) - 32) * 5 / 9 | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Indoor Humidity
  - name: "Indoor Humidity"
    unique_id: "gw2000a_indoor_humidity"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    device_class: "humidity"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.humidityin | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Relative Barometric Pressure
  - name: "Relative Pressure"
    unique_id: "gw2000a_relative_pressure"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "hPa"
    device_class: "pressure"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.baromrelin | default(0.0) | float * 33.86389) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Absolute Barometric Pressure
  - name: "Absolute Pressure"
    unique_id: "gw2000a_absolute_pressure"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "hPa"
    device_class: "pressure"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.baromabsin | default(0.0) | float * 33.86389) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Outdoor Temperature
  - name: "Outdoor Temperature"
    unique_id: "gw2000a_outdoor_temperature"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "°C"
    device_class: "temperature"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ((ns.data.tempf | default(0.0) | float) - 32) * 5 / 9 | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Outdoor Humidity
  - name: "Outdoor Humidity"
    unique_id: "gw2000a_humidity"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    device_class: "humidity"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.humidity | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Vapor Pressure Deficit (VPD)
  - name: "VPD"
    unique_id: "gw2000a_vpd"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "hPa"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.vpd | default(0.0) | float * 33.86389) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Wind Direction
  - name: "Wind Direction"
    unique_id: "gw2000a_wind_direction"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "°"
    icon: mdi:compass
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.winddir | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Wind Speed
  - name: "Wind Speed"
    unique_id: "gw2000a_wind_speed"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "m/s"
    device_class: "wind_speed"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.windspeedmph | default(0.0) | float * 0.44704) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Wind Gust
  - name: "Wind Gust"
    unique_id: "gw2000a_wind_gust"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "m/s"
    device_class: "wind_speed"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.windgustmph | default(0.0) | float * 0.44704) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Max Daily Gust
  - name: "Max Daily Gust"
    unique_id: "gw2000a_max_daily_gust"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "m/s"
    device_class: "wind_speed"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.maxdailygust | default(0.0) | float * 0.44704) | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Solar Radiation
  - name: "Solar Radiation"
    unique_id: "gw2000a_solar_radiation"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "W/m²"
    device_class: "illuminance" # Or "power" if you prefer
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.solarradiation | default(0.0) | float }}
    device:
      identifiers: "gw2000a_weather_station"

  # UV Index
  - name: "UV Index"
    unique_id: "gw2000a_uv_index"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "UV Index"
    icon: mdi:sunglasses
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.uv | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Rain Rate
  - name: "Rain Rate"
    unique_id: "gw2000a_rain_rate"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm/hr"
    device_class: "precipitation_intensity"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.rainratein | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Event Rain
  - name: "Event Rain"
    unique_id: "gw2000a_event_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.eventrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Hourly Rain
  - name: "Hourly Rain"
    unique_id: "gw2000a_hourly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.hourlyrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Daily Rain
  - name: "Daily Rain"
    unique_id: "gw2000a_daily_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.dailyrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Weekly Rain
  - name: "Weekly Rain"
    unique_id: "gw2000a_weekly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.weeklyrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Monthly Rain
  - name: "Monthly Rain"
    unique_id: "gw2000a_monthly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.monthlyrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Yearly Rain
  - name: "Yearly Rain"
    unique_id: "gw2000a_yearly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.yearlyrainin | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Rain Rate
  - name: "Piezo Rain Rate"
    unique_id: "gw2000a_piezo_rain_rate"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm/hr"
    device_class: "precipitation_intensity"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.rrain_piezo | default(0.0) | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Event Rain
  - name: "Piezo Event Rain"
    unique_id: "gw2000a_piezo_event_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.erain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Hourly Rain
  - name: "Piezo Hourly Rain"
    unique_id: "gw2000a_piezo_hourly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.hrain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Daily Rain
  - name: "Piezo Daily Rain"
    unique_id: "gw2000a_piezo_daily_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.drain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Weekly Rain
  - name: "Piezo Weekly Rain"
    unique_id: "gw2000a_piezo_weekly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.wrain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Monthly Rain
  - name: "Piezo Monthly Rain"
    unique_id: "gw2000a_piezo_monthly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.mrain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Piezo Yearly Rain
  - name: "Piezo Yearly Rain"
    unique_id: "gw2000a_piezo_yearly_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.yrain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # New sensor: Piezo Switch Rain (srain_piezo)
  - name: "Piezo Switch Rain"
    unique_id: "gw2000a_piezo_switch_rain"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "mm"
    device_class: "precipitation"
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ (ns.data.srain_piezo | float * 25.4) | round(1) }}
    device:
      identifiers: "gw2000a_weather_station"

  # WS90 Cap Voltage
  - name: "WS90 Cap Voltage"
    unique_id: "gw2000a_ws90_cap_volt"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.ws90cap_volt | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # New sensor: WS90 Version (ws90_ver)
  - name: "WS90 Version"
    unique_id: "gw2000a_ws90_version"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    icon: mdi:numeric
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.ws90_ver | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Moisture 1
  - name: "Soil Moisture 1"
    unique_id: "gw2000a_soil_moisture_1"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    icon: mdi:water-percent
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilmoisture1 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil AD 1 (Analog-to-Digital reading)
  - name: "Soil AD 1"
    unique_id: "gw2000a_soil_ad_1"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "ADC" # Custom unit
    icon: mdi:chip
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilad1 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Moisture 2
  - name: "Soil Moisture 2"
    unique_id: "gw2000a_soil_moisture_2"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    device_class: "humidity"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilmoisture2 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil AD 2
  - name: "Soil AD 2"
    unique_id: "gw2000a_soil_ad_2"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "ADC"
    icon: mdi:chip
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilad2 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Moisture 3
  - name: "Soil Moisture 3"
    unique_id: "gw2000a_soil_moisture_3"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    icon: mdi:water-percent
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilmoisture3 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil AD 3
  - name: "Soil AD 3"
    unique_id: "gw2000a_soil_ad_3"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "ADC"
    icon: mdi:chip
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilad3 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Moisture 4
  - name: "Soil Moisture 4"
    unique_id: "gw2000a_soil_moisture_4"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "%"
    icon: mdi:water-percent
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilmoisture4 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil AD 4
  - name: "Soil AD 4"
    unique_id: "gw2000a_soil_ad_4"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "ADC"
    icon: mdi:chip
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilad4 | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Battery 1
  - name: "Soil Battery 1"
    unique_id: "gw2000a_soil_battery_1"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilbatt1 | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Battery 2
  - name: "Soil Battery 2"
    unique_id: "gw2000a_soil_battery_2"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilbatt2 | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Battery 3
  - name: "Soil Battery 3"
    unique_id: "gw2000a_soil_battery_3"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilbatt3 | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Soil Battery 4
  - name: "Soil Battery 4"
    unique_id: "gw2000a_soil_battery_4"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.soilbatt4 | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # WH90 Battery
  - name: "WH90 Battery"
    unique_id: "gw2000a_wh90_battery"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "V"
    device_class: "voltage"
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.wh90batt | default(0.0) | float | round(2) }}
    device:
      identifiers: "gw2000a_weather_station"

  # Runtime (uptime)
  - name: "Runtime"
    unique_id: "gw2000a_runtime"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "seconds"
    icon: mdi:timer-outline
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.runtime | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Heap Memory
  - name: "Heap Memory"
    unique_id: "gw2000a_heap_memory"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "bytes"
    icon: mdi:memory
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.heap | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # DNS Error Count
  - name: "DNS Error Count"
    unique_id: "gw2000a_dns_error_count"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    icon: mdi:dns-off
    state_class: "total_increasing"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.dns_err_cnt | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # Station Type (as a text sensor)
  - name: "Station Type"
    unique_id: "gw2000a_station_type"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.stationtype | default('unknown') }}
    device:
      identifiers: "gw2000a_weather_station"

  # Frequency (as a numeric sensor)
  - name: "Frequency"
    unique_id: "gw2000a_frequency"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "MHz"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.freq | default('0M') | replace('M', '') | float }}
    device:
      identifiers: "gw2000a_weather_station"

  # Model (as a text sensor)
  - name: "Model"
    unique_id: "gw2000a_model"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.model | default('unknown') }}
    device:
      identifiers: "gw2000a_weather_station"

  # Interval (as a numeric sensor)
  - name: "Interval"
    unique_id: "gw2000a_interval"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    unit_of_measurement: "seconds"
    icon: mdi:timer-sync-outline
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.interval | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"

  # New sensor: CDN Flag (cdnflg)
  - name: "CDN Flag"
    unique_id: "gw2000a_cdn_flag"
    state_topic: "ecowitt/E05A1B2117DF" # <<< REPLACE WITH YOUR ACTUAL MQTT TOPIC
    icon: mdi:flag
    state_class: "measurement"
    value_template: >-
      {% set ns = namespace(data={}) %}
      {% for item in value | string | regex_findall('([^&=]+)=([^&]*)') %}
        {% set ns.data = ns.data | combine({item[0]: item[1]}) %}
      {% endfor %}
      {{ ns.data.cdnflg | default(0) | int }}
    device:
      identifiers: "gw2000a_weather_station"
      
